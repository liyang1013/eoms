<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keboda.eomsback.system.mapper.ZxwFileMapper">

  <insert id="insertSelective" keyColumn="ZXW01" keyProperty="zxw01" parameterType="com.keboda.eomsback.system.pojo.ZxwFile" useGeneratedKeys="true">
    insert into ZXW_FILE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="zxw02 != null">
        ZXW02,
      </if>
      <if test="zxw03 != null">
        ZXW03,
      </if>
      <if test="zxw04 != null">
        ZXW04,
      </if>
      <if test="zxw05 != null">
        ZXW05,
      </if>
      <if test="zxw06 != null">
        ZXW06,
      </if>
      <if test="zxw07 != null">
        ZXW07,
      </if>
      <if test="zxw08 != null">
        ZXW08,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="zxw02 != null">
        #{zxw02,jdbcType=DECIMAL},
      </if>
      <if test="zxw03 != null">
        #{zxw03,jdbcType=VARCHAR},
      </if>
      <if test="zxw04 != null">
        #{zxw04,jdbcType=VARCHAR},
      </if>
      <if test="zxw05 != null">
        #{zxw05,jdbcType=VARCHAR},
      </if>
      <if test="zxw06 != null">
        #{zxw06,jdbcType=VARCHAR},
      </if>
      <if test="zxw07 != null">
        #{zxw07,jdbcType=VARCHAR},
      </if>
      <if test="zxw08 != null">
        #{zxw08,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.keboda.eomsback.system.pojo.ZxwFile">
    update ZXW_FILE
    <set>
      <if test="zxw03 != null">
        ZXW03 = #{zxw03,jdbcType=VARCHAR},
      </if>
      <if test="zxw04 != null">
        ZXW04 = #{zxw04,jdbcType=VARCHAR},
      </if>
      <if test="zxw05 != null">
        ZXW05 = #{zxw05,jdbcType=VARCHAR},
      </if>
      <if test="zxw06 != null">
        ZXW06 = #{zxw06,jdbcType=VARCHAR},
      </if>
      <if test="zxw07 != null">
        ZXW07 = #{zxw07,jdbcType=VARCHAR},
      </if>
      <if test="zxw08 != null">
        ZXW08 = #{zxw08,jdbcType=VARCHAR},
      </if>
    </set>
    where ZXW01 = #{zxw01,jdbcType=VARCHAR}
      and ZXW02 = #{zxw02,jdbcType=DECIMAL}
  </update>

    <select id="selectPositionCodeByName" resultType="java.lang.String">
        select zw01
        from zw_file
        where zw02 = #{positionName}
    </select>
    <select id="searchRecordsList" resultType="com.keboda.eomsback.authorityReview.pojo.AuthorityRecordsVo">
        select zw01                                                                   positionCode,
        zw02                                                                   positionName,
        zy02                                                                   permissionCode,
        gaz03                                                                  permissionName,
        <choose>
            <when test="createTags != null and createTags.length > 0">
                <foreach item="item" index="index" collection="createTags" open="case when " separator="or" close="then 'Y' else 'N' end  isCreate,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isCreate,
            </otherwise>
        </choose>

        <choose>
            <when test="deleteTags != null and deleteTags.length > 0">
                <foreach item="item" index="index" collection="deleteTags" open="case when " separator="or" close="then 'Y' else 'N' end isDelete,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isDelete,
            </otherwise>
        </choose>

        <choose>
            <when test="updateTags != null and updateTags.length > 0">
                <foreach item="item" index="index" collection="updateTags" open="case when " separator="or" close="then 'Y' else 'N' end  isUpdate ,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isUpdate,
            </otherwise>
        </choose>

        <choose>
            <when test="readTags != null and readTags.length > 0">
                <foreach item="item" index="index" collection="readTags" open="case when " separator="or" close="then 'Y' else 'N' end  isRead,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isRead,
            </otherwise>
        </choose>

        <choose>
            <when test="confirmTags != null and confirmTags.length > 0">
                <foreach item="item" index="index" collection="confirmTags" open="case when " separator="or" close="then 'Y' else 'N' end isConfirm,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isConfirm,
            </otherwise>
        </choose>

        <choose>
            <when test="unConfirmTags != null and unConfirmTags.length > 0">
                <foreach item="item" index="index" collection="unConfirmTags" open="case when " separator="or" close="then 'Y' else 'N' end  isUnConfirm,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isUnConfirm,
            </otherwise>
        </choose>

        <choose>
            <when test="voidTags != null and voidTags.length > 0">
                <foreach item="item" index="index" collection="voidTags" open="case when " separator="or" close="then 'Y' else 'N' end  isVoid,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isVoid,
            </otherwise>
        </choose>

        <choose>
            <when test="unVoidTags != null and unVoidTags.length > 0">
                <foreach item="item" index="index" collection="unVoidTags" open="case when " separator="or" close="then 'Y' else 'N' end isUnVoid,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isUnVoid,
            </otherwise>
        </choose>

        <choose>
            <when test="postTags != null and postTags.length > 0">
                <foreach item="item" index="index" collection="postTags" open="case when " separator="or" close="then 'Y' else 'N' end  isPost,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isPost,
            </otherwise>
        </choose>

        <choose>
            <when test="unPostTags != null and unPostTags.length > 0">
                <foreach item="item" index="index" collection="unPostTags" open="case when " separator="or" close="then 'Y' else 'N' end  isUnPost,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isUnPost,
            </otherwise>
        </choose>

        <choose>
            <when test="printTags != null and printTags.length > 0">
                <foreach item="item" index="index" collection="printTags" open="case when " separator="or" close="then 'Y' else 'N' end  isPrint,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isPrint,
            </otherwise>
        </choose>

        <choose>
            <when test="exportTags != null and exportTags.length > 0">
                <foreach item="item" index="index" collection="exportTags" open="case when " separator="or" close="then 'Y' else 'N' end  isExport,">
                    REGEXP_LIKE(zy03, '(^|,)(${item})(,|$)')
                </foreach>
            </when>
            <otherwise>
                'N' isExport,
            </otherwise>
        </choose>

        case when col is null then 'N' else 'Y' end                                isAmount

        from ZW_FILE
        left join zy_file ON ZY01 = ZW01
        left join gaz_file on gaz01 = zy02 and gaz02 = 2
        left join (select col
        from (SELECT GAE01 col, GAE04 colname, GAE03 lang
        FROM GAE_FILE
        union all
        SELECT ZAL01 col, ZAL05 colname, ZAL03 lang
        FROM ZAL_FILE)
        <where>
            lang = '2'
            <if test="amountTags != null and amountTags.length > 0">
                <foreach item="item" index="index" collection="amountTags" open="and (" separator="or " close=")">
                    colname like  '%${item}%'
                </foreach>
            </if>
        </where>
        group by col) on col = zy02
        <where>
            <if test="code != null and code != '' ">
                and zw01 =#{code}
            </if>
        </where>

    </select>


</mapper>